"use strict";
exports.id = 2857;
exports.ids = [2857];
exports.modules = {

/***/ 12857:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cn: () => (/* binding */ cn),
/* harmony export */   dY: () => (/* binding */ isBase64Image)
/* harmony export */ });
/* unused harmony exports formatDateString, formatThreadCount */
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10566);
/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59610);


// generated by shadcn
function cn(...inputs) {
    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__/* .twMerge */ .m)((0,clsx__WEBPACK_IMPORTED_MODULE_1__/* .clsx */ .W)(inputs));
}
// created by chatgpt
function isBase64Image(imageData) {
    const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
    return base64Regex.test(imageData);
}
// created by chatgpt
function formatDateString(dateString) {
    const options = {
        year: "numeric",
        month: "short",
        day: "numeric"
    };
    const date = new Date(dateString);
    const formattedDate = date.toLocaleDateString(undefined, options);
    const time = date.toLocaleTimeString([], {
        hour: "numeric",
        minute: "2-digit"
    });
    return `${time} - ${formattedDate}`;
}
// created by chatgpt
function formatThreadCount(count) {
    if (count === 0) {
        return "No Threads";
    } else {
        const threadCount = count.toString().padStart(2, "0");
        const threadWord = count === 1 ? "Thread" : "Threads";
        return `${threadCount} ${threadWord}`;
    }
}


/***/ })

};
;